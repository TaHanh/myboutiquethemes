{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../../components/layout';\nimport { useState, useEffect, useRef } from 'react';\nimport Axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport config from '../../../config';\nimport '../../../static/styles/composition.scss';\nimport Cookies from 'universal-cookie';\nimport { getParamsURL } from '../../../utils/convert';\n\nfunction Youtube(props) {\n  var _useState = useState(props.data),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var _useState2 = useState(''),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var _useState3 = useState(false),\n      isLoad = _useState3[0],\n      setLoad = _useState3[1];\n\n  var _useState4 = useState(''),\n      token = _useState4[0],\n      setToken = _useState4[1];\n\n  useEffect(function () {\n    var tk = new Cookies().get('user');\n    console.log(tk);\n\n    if (tk) {\n      setToken(tk.token);\n    }\n  }, []);\n\n  var callBack = function callBack(key, value) {\n    console.log(key, value);\n\n    switch (key) {\n      case 'POST':\n        if (value != '') {\n          setLoad(true);\n          Axios.post(config.host.base + config.path.base.youtubes, {\n            title: '',\n            link: value\n          }, {\n            headers: {\n              'Content-Type': 'application/json',\n              Authorization: 'Bearer ' + token\n            }\n          }).then(function (res) {\n            console.log(res.data);\n            data.rows.unshift(res.data);\n            setData(data);\n            toast.success('Thêm thành công !', {\n              autoClose: 3000\n            });\n            setValue('');\n          })[\"catch\"](function (err) {\n            console.log('POST', err);\n            toast.error('Không thành công !', {\n              autoClose: 3000\n            });\n          })[\"finally\"](function (fil) {\n            setLoad(false);\n          });\n        } else {\n          toast.error('Bạn chưa nhập thành phần !', {\n            autoClose: 3000\n          });\n        }\n\n        break;\n\n      case 'DELETE':\n        setLoad(true);\n        Axios[\"delete\"](config.host.base + config.path.base.youtubes + '/' + value.item.id, {\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: 'Bearer ' + token\n          }\n        }).then(function (res) {\n          data.rows.splice(value.index, 1);\n          setData(data);\n          toast.success('Xoá thành công !', {\n            autoClose: 3000\n          });\n        })[\"catch\"](function (err) {\n          console.log('POST', err);\n          toast.error('Không thành công !', {\n            autoClose: 3000\n          });\n        })[\"finally\"](function (fil) {\n          setLoad(false);\n        });\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  var changeInput = function changeInput(value) {\n    setValue(value.target.value);\n  };\n\n  return __jsx(Layout, {\n    title: \"Glowish's Youtube\"\n  }, __jsx(\"div\", {\n    className: \"composition px-md-4 px-3\"\n  }, __jsx(\"div\", {\n    className: \"py-5\"\n  }, __jsx(\"div\", {\n    className: \"row align-items-end\"\n  }, __jsx(\"div\", {\n    className: \"col-xl-6 col-lg-7 col-sm-9 col-12\"\n  }, __jsx(\"input\", {\n    type: \"text\",\n    className: \"form-control mb-sm-0 mb-3\",\n    multiple: true,\n    value: value,\n    onChange: function onChange(e) {\n      changeInput(e);\n    },\n    onKeyPress: function onKeyPress(e) {\n      if (e.key == 'Enter') {\n        callBack('POST', value);\n      }\n    },\n    placeholder: \"Th\\xEAm link youtube\"\n  })), __jsx(\"div\", {\n    className: \"col-3\"\n  }, isLoad ? __jsx(\"div\", {\n    className: \"spinner-border text-primary\",\n    role: \"status\"\n  }, __jsx(\"span\", {\n    className: \"sr-only\"\n  }, \"Loading...\")) : __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary text-uppercase font-weight-bold\",\n    onClick: function onClick() {\n      return callBack('POST', value);\n    }\n  }, \"Th\\xEAm\")))), __jsx(\"div\", {\n    className: \"row\"\n  }, data && data.rows && data.rows.map(function (item, index) {\n    return __jsx(\"div\", {\n      className: \"col-lg-3 col-md-4 col-sm-6 col-12\"\n    }, __jsx(\"li\", {\n      className: \"list-group-item text-center my-3\"\n    }, __jsx(\"iframe\", {\n      width: \"100%\",\n      src: 'https://www.youtube.com/embed/' + getParamsURL(item.link),\n      frameborder: \"0\",\n      allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n      allowfullscreen: true\n    }), __jsx(\"button\", {\n      className: \"btn btn-outline-danger btn-sm\",\n      onClick: function onClick() {\n        return callBack('DELETE', {\n          item: item,\n          index: index\n        });\n      }\n    }, \"Xo\\xE1\")));\n  }))));\n}\n\nYoutube.getInitialProps = function _callee(ctx) {\n  var data, req, res, query, cookies, user, resData;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          data = [];\n          req = ctx.req, res = ctx.res, query = ctx.query;\n          cookies = new Cookies();\n          user = cookies.get('user');\n\n          if (!user) {\n            _context.next = 13;\n            break;\n          }\n\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(Axios.get(config.host.base + config.path.base.youtubes)[\"catch\"](function (e) {\n            return console.log('Error: ', e.code);\n          }));\n\n        case 7:\n          resData = _context.sent;\n          console.log(resData);\n          data = resData && resData.data ? resData.data : [];\n          return _context.abrupt(\"return\", {\n            data: data\n          });\n\n        case 13:\n          res.redirect('/');\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Youtube;","map":null,"metadata":{},"sourceType":"module"}