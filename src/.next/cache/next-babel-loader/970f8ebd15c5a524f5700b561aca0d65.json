{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../../../components/layout\";\nimport { useState, useEffect } from \"react\";\nimport fetch from \"isomorphic-unfetch\";\nimport Link from \"next/link\";\nimport config from \"../../../config\";\nimport Axios from \"axios\";\nimport getInitialData from \"../../../store/data\";\nimport { convertTitle } from \"../../../utils/convert\";\nimport { observer, inject } from \"mobx-react\";\nimport Cookies from \"universal-cookie\";\nvar limit = 20;\n\nvar PostsAd = function PostsAd(props) {\n  var _useState = useState(props.data),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var _useState2 = useState(false),\n      isLoad = _useState2[0],\n      setLoad = _useState2[1];\n\n  var _useState3 = useState(true),\n      isLoadBtn = _useState3[0],\n      setLoadBtn = _useState3[1];\n\n  var _useState4 = useState(1),\n      page = _useState4[0],\n      setPage = _useState4[1];\n\n  console.log(\"PostDetail\", props.store.likesCount);\n  useEffect(function () {\n    console.log(\"PostDetail\", props.store.likesCount);\n  }, []);\n\n  var loadMore = function loadMore() {\n    setLoad(true);\n    var pageNew = page + 1;\n    setPage(pageNew);\n    console.log(pageNew);\n    Axios.get(config.host.base + config.path.base.posts + \"?page=\" + pageNew + \"&&limit=\" + limit).then(function (res) {\n      if (res.data.length > 0) {\n        // data = data.concat(res.data);\n        setData(data.concat(res.data));\n\n        if (res.data.length < limit) {\n          setLoadBtn(false);\n        }\n      } else {\n        setLoadBtn(false);\n      }\n    })[\"catch\"](function (err) {\n      console.log(err);\n    })[\"finally\"](function (fil) {\n      setLoad(false);\n    });\n  };\n\n  return __jsx(Layout, {\n    title: \"Blush\"\n  }, __jsx(\"div\", {\n    className: \"site-content\"\n  }, __jsx(\"div\", {\n    className: \"site-main\"\n  }, __jsx(\"div\", {\n    className: \"row justify-content-end mx-3 mb-3\"\n  }, __jsx(Link, {\n    href: config.client.adminPostDetail\n  }, __jsx(\"a\", null, __jsx(\"button\", {\n    className: \"btn btn-primary rounded-circle\",\n    title: \"T\\u1EA1o b\\xE0i vi\\u1EBFt\",\n    style: {\n      width: 50,\n      height: 50\n    }\n  }, __jsx(\"i\", {\n    className: \"fas fa-pen\",\n    style: {\n      fontSize: 25\n    }\n  }))))), __jsx(\"div\", {\n    className: \"row\"\n  }, data && data.length > 0 ? data.map(function (item, index) {\n    return __jsx(\"div\", {\n      className: \"col-xl-3 xol-lg-4 col-md-6 col-12\"\n    }, __jsx(\"div\", {\n      className: \"card-post\"\n    }, __jsx(\"div\", {\n      className: \"card-entry-thumbnail\"\n    }, __jsx(Link, {\n      href: config.client.adminPostDetail + \"?id=\" + convertTitle(item.title) + \"_\" + item.idPost\n    }, __jsx(\"a\", null, __jsx(\"div\", {\n      style: {\n        backgroundImage: \"url(\" + \"\".concat(config.host.upload + item.image) + \")\",\n        backgroundPosition: \"center center\",\n        backgroundSize: \"cover\"\n      }\n    }, __jsx(\"img\", {\n      style: {\n        visibility: \"hidden\"\n      },\n      src: require(\"../../../static/images/f1.jpg\")\n    }))))), __jsx(\"div\", {\n      className: \"card-entry-body\"\n    }, __jsx(\"div\", {\n      className: \"card-entry-header\"\n    }, __jsx(\"h2\", {\n      className: \"card-entry-title max-line\"\n    }, __jsx(Link, {\n      href: config.client.posts + \"/\" + convertTitle(item.title) + \"_\" + item.idPost\n    }, __jsx(\"a\", null, item.title)))), __jsx(\"div\", {\n      className: \"card-entry-content\"\n    }, __jsx(\"div\", {\n      className: \"card-entry-meta\"\n    }, item.tags && item.tags.map(function (e, i) {\n      return __jsx(Link, {\n        href: config.client.tags + convertTitle(e)\n      }, __jsx(\"a\", null, e, \" \", i != item.tags.length - 1 ? \", \" : null));\n    })), __jsx(Link, {\n      href: config.client.posts + \"/\" + convertTitle(item.title) + \"_\" + item.idPost\n    }, __jsx(\"a\", {\n      className: \"readmore\"\n    }, __jsx(\"button\", {\n      className: \"btn read-more\"\n    }, \"Read more\")))))));\n  }) : __jsx(\"h4\", {\n    className: \"my-5\"\n  }, \"Kh\\xF4ng c\\xF3 b\\xE0i vi\\u1EBFt n\\xE0o ph\\xF9 h\\u1EE3p !\")), __jsx(\"div\", {\n    className: \"row justify-content-center\"\n  }, isLoadBtn ? isLoad ? __jsx(\"div\", {\n    className: \"spinner-border text-primary\",\n    role: \"status\"\n  }, __jsx(\"span\", {\n    className: \"sr-only\"\n  }, \"Loading...\")) : __jsx(\"div\", {\n    className: \"readmore\"\n  }, __jsx(\"button\", {\n    className: \"btn read-more\",\n    onClick: function onClick() {\n      return loadMore();\n    }\n  }, \"read more\")) : null))));\n};\n\nPostsAd.getInitialProps = function _callee(ctx) {\n  var req, res, query, data, user, resPost;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          req = ctx.req, res = ctx.res, query = ctx.query;\n          data = {}; // const cookies = new Cookies();\n\n          user = new Cookies().get(\"user\"); // console.log(new Cookies().get(\"user\"));\n          // console.log(\"cookies\", new Cookies().get(\"user\"));\n\n          if (!user) {\n            _context.next = 11;\n            break;\n          }\n\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(Axios.get(config.host.base + config.path.base.posts + \"?page=1&&limit=\" + limit)[\"catch\"](function (e) {\n            console.log(\"Error: \", e.code);\n          }));\n\n        case 6:\n          resPost = _context.sent;\n          data = resPost && resPost.data != undefined ? resPost.data : [];\n          return _context.abrupt(\"return\", {\n            data: data\n          });\n\n        case 11:\n          res.redirect(\"/\");\n\n        case 12:\n          return _context.abrupt(\"return\");\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default inject(\"store\")(observer(PostsAd));","map":null,"metadata":{},"sourceType":"module"}