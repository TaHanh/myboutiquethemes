{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Layout from '../../../components/layout';\nimport { useState, useEffect, useRef } from 'react';\nimport Axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport config from '../../../config';\nimport '../../../static/styles/composition.scss';\nimport Cookies from 'universal-cookie';\nimport { getInitialDataAside } from '../../../store/data';\n\nfunction Composition(props) {\n  const {\n    0: data,\n    1: setData\n  } = useState([]);\n  const {\n    0: value,\n    1: setValue\n  } = useState('');\n  const {\n    0: isLoad,\n    1: setLoad\n  } = useState(false);\n  useEffect(() => {\n    setData(props.categories);\n  }, []);\n\n  const callBack = (key, value) => {\n    console.log(key, value);\n\n    switch (key) {\n      case 'POST_COMPOSITON':\n        if (value != '') {\n          setLoad(true);\n          Axios.post(config.host.base + config.path.base.categories, {\n            name: value\n          }, {\n            headers: {\n              'Content-Type': 'application/json',\n              Authorization: 'Bearer ' + new Cookies().get('user').token\n            }\n          }).then(res => {\n            data.unshift(res.data);\n            setData(data);\n            toast.success('Thêm thành công !', {\n              autoClose: 3000\n            });\n            setValue('');\n          }).catch(err => {\n            console.log('POST_COMPOSITON', err);\n            toast.error('Không thành công !', {\n              autoClose: 3000\n            });\n          }).finally(fil => {\n            setLoad(false);\n          });\n        } else {\n          toast.error('Bạn chưa nhập thành phần !', {\n            autoClose: 3000\n          });\n        }\n\n        break;\n\n      case 'DELETE':\n        setLoad(true);\n        console.log(config.host.base + config.path.base.categories + '/' + value.item.id);\n        Axios.delete(config.host.base + config.path.base.categories + '/' + value.item.id, {\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: 'Bearer ' + new Cookies().get('user').token\n          }\n        }).then(res => {\n          data.splice(value.index, 1);\n          setData(data);\n          toast.success('Xoá thành công !', {\n            autoClose: 3000\n          });\n        }).catch(err => {\n          console.log('POST_COMPOSITON', err);\n          toast.error('Không thành công !', {\n            autoClose: 3000\n          });\n        }).finally(fil => {\n          setLoad(false);\n        });\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const changeInput = value => {\n    setValue(value.target.value);\n  };\n\n  return __jsx(Layout, {\n    title: 'Danh mục',\n    compositions: props.compositions,\n    categories: props.categories\n  }, __jsx(\"div\", {\n    className: \"composition px-md-4 px-3\"\n  }, __jsx(\"div\", {\n    className: \"py-5\"\n  }, __jsx(\"div\", {\n    className: \"row align-items-end\"\n  }, __jsx(\"div\", {\n    className: \"col-xl-6 col-lg-7 col-sm-9 col-12\"\n  }, __jsx(\"h5\", null, \"Danh m\\u1EE5c\"), __jsx(\"input\", {\n    type: \"text\",\n    className: \"form-control mb-sm-0 mb-3\",\n    multiple: true,\n    value: value,\n    onChange: e => {\n      changeInput(e);\n    },\n    onKeyPress: e => {\n      if (e.key == 'Enter') {\n        callBack('POST_COMPOSITON', value);\n      }\n    }\n  })), __jsx(\"div\", {\n    className: \"col-3\"\n  }, isLoad ? __jsx(\"div\", {\n    className: \"spinner-border text-primary\",\n    role: \"status\"\n  }, __jsx(\"span\", {\n    className: \"sr-only\"\n  }, \"Loading...\")) : __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary text-uppercase font-weight-bold\",\n    onClick: () => callBack('POST_COMPOSITON', value)\n  }, \"Th\\xEAm\")))), __jsx(\"div\", {\n    className: \"row\"\n  }, data && data.map((item, index) => {\n    return __jsx(\"div\", {\n      className: \"col-lg-3 col-md-4 col-sm-6 col-12\"\n    }, __jsx(\"li\", {\n      className: \"list-group-item d-flex justify-content-between align-items-center px-3 my-3\"\n    }, item.name, __jsx(\"span\", {\n      className: \"badge badge-danger cursor-pointer ml-2\",\n      onClick: () => callBack('DELETE', {\n        item,\n        index\n      })\n    }, __jsx(\"span\", {\n      ariaHidden: \"true\"\n    }, \"\\xD7\"))));\n  }))));\n}\n\nComposition.getInitialProps = async function (ctx) {\n  let categories = [];\n  const {\n    req,\n    res,\n    query\n  } = ctx;\n  const cookies = new Cookies();\n  let user = cookies.get('user');\n  let data = await getInitialDataAside();\n\n  if (user) {\n    let res = await Axios.get(config.host.base + config.path.base.categories).catch(e => console.log('Error: ', e.code));\n    categories = res && res.data ? res.data : [];\n    return _objectSpread({}, data, {\n      categories: categories\n    });\n  } else {\n    res.redirect('/');\n  }\n\n  return _objectSpread({}, data);\n};\n\nexport default Composition;","map":null,"metadata":{},"sourceType":"module"}