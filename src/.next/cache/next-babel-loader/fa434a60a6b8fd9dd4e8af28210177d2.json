{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { useState, useEffect, useRef, Component } from 'react'; // import ReactQuill from 'react-quill'\n\nimport 'react-quill/dist/quill.snow.css';\nimport dynamic from 'next/dynamic';\nvar QuillNoSSRWrapper = dynamic(function () {\n  return import('react-quill');\n}, {\n  ssr: false,\n  loading: function loading() {\n    return __jsx(\"p\", null, \"fgdshf\");\n  },\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('react-quill')];\n    },\n    modules: ['react-quill']\n  }\n});\nvar modules = {\n  toolbar: [[{\n    header: [1, 2, 3, 4, 5, 6, false]\n  }], [{\n    font: []\n  }], [{\n    size: ['small', false, 'large']\n  }], ['bold', 'italic', 'underline', 'strike', 'blockquote'], [{\n    list: 'ordered'\n  }, {\n    list: 'bullet'\n  }, {\n    indent: '-1'\n  }, {\n    indent: '+1'\n  }], ['link', 'image', 'video'] // [{ color: [] }, { background: [] }], // dropdown with defaults from theme\n  // [{ align: [] }],\n  // ['clean'],\n  ],\n  clipboard: {\n    // toggle to add extra line breaks when pasting HTML:\n    matchVisual: false\n  }\n};\nvar formats = ['header', 'font', 'size', 'bold', 'italic', 'underline', 'strike', 'blockquote', 'list', 'bullet', 'indent', 'link', 'image', 'video'];\n\nvar QuillEditor = /*#__PURE__*/function (_Component) {\n  _inherits(QuillEditor, _Component);\n\n  var _super = _createSuper(QuillEditor);\n\n  function QuillEditor(props) {\n    var _this;\n\n    _classCallCheck(this, QuillEditor);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (content, delta, source, editor) {\n      _this.setState({\n        value: editor.getHTML()\n      });\n    });\n\n    _this.state = {\n      value: null\n    }; // You can also pass a Quill Delta here\n\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.editor = React.createRef();\n    return _this;\n  }\n\n  _createClass(QuillEditor, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", null, __jsx(QuillNoSSRWrapper, {\n        ref: this.editor,\n        onChange: this.handleChange,\n        modules: modules,\n        formats: formats,\n        theme: \"snow\"\n      }));\n    }\n  }]);\n\n  return QuillEditor;\n}(Component);\n\nexport default QuillEditor; // function EditorTxt(props) {\n//   const [editorState, setEditorState] = useState('')\n//   const [check, setCheck] = useState(false)\n//   const editorRef = useRef()\n//   const [editorLoaded, setEditorLoaded] = useState(false)\n//   const [value, setValue] = useState('')\n//   const onChange = (editorState) => {\n//     setEditorState(editorState)\n//   }\n//   const { Editor } = editorRef.current || {}\n//   const [Editor1, setEditor1] = useState('')\n//   useEffect(() => {\n//     if (typeof window !== 'undefined') {\n//       this.ReactQuill = require('react-quill')\n//     }\n//     if (document) {\n//       setEditor1(require('react-draft-wysiwyg'))\n//       if (process.browser) {\n//         setEditorLoaded(true)\n//       }\n//     }\n//     editorRef.current = {\n//       Editor: require('react-draft-wysiwyg'),\n//     }\n//   }, [])\n//   const ReactQuill = this.ReactQuill\n//   if (typeof window !== 'undefined' && ReactQuill) {\n//     return <ReactQuill onChange={setValue} theme='bubble' value={value} />\n//   } else {\n//     return <textarea />\n//   }\n//   return (\n//     <div>\n//       {editorLoaded ? (\n//         <Editor1\n//           editorState={editorState}\n//           toolbarClassName='toolbarClassName'\n//           wrapperClassName='wrapperClassName'\n//           editorClassName='editorClassName'\n//           onEditorStateChange={onChange}\n//         />\n//       ) : null}\n//       {/* <ReactQuill theme='snow' value={value} onChange={setValue} /> */}\n//     </div>\n//   )\n// }\n// export default EditorTxt","map":null,"metadata":{},"sourceType":"module"}