{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect, useRef, Component } from 'react'; // import ReactQuill from 'react-quill'\n\nimport 'react-quill/dist/quill.snow.css';\nimport dynamic from 'next/dynamic';\nconst QuillNoSSRWrapper = dynamic(() => import('react-quill'), {\n  ssr: false,\n  loading: () => __jsx(\"p\", null, \"fgdshf\"),\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('react-quill')],\n    modules: ['react-quill']\n  }\n});\nconst modules = {\n  toolbar: [[{\n    header: [1, 2, 3, 4, 5, 6, false]\n  }], [{\n    font: []\n  }], [{\n    size: ['small', false, 'large']\n  }], ['bold', 'italic', 'underline', 'strike', 'blockquote'], [{\n    list: 'ordered'\n  }, {\n    list: 'bullet'\n  }, {\n    indent: '-1'\n  }, {\n    indent: '+1'\n  }], ['link', 'image', 'video'] // [{ color: [] }, { background: [] }], // dropdown with defaults from theme\n  // [{ align: [] }],\n  // ['clean'],\n  ],\n  clipboard: {\n    // toggle to add extra line breaks when pasting HTML:\n    matchVisual: false\n  }\n};\nconst formats = ['header', 'font', 'size', 'bold', 'italic', 'underline', 'strike', 'blockquote', 'list', 'bullet', 'indent', 'link', 'image', 'video'];\n\nclass QuillEditor extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleChange\", (content, delta, source, editor) => {\n      this.setState({\n        value: editor.getHTML()\n      });\n    });\n\n    this.state = {\n      value: null\n    }; // You can also pass a Quill Delta here\n\n    this.handleChange = this.handleChange.bind(this);\n    this.editor = React.createRef();\n  }\n\n  render() {\n    return __jsx(\"div\", null, __jsx(QuillNoSSRWrapper, {\n      ref: this.editor,\n      onChange: this.handleChange,\n      modules: modules,\n      formats: formats,\n      theme: \"snow\"\n    }));\n  }\n\n}\n\nexport default QuillEditor; // function EditorTxt(props) {\n//   const [editorState, setEditorState] = useState('')\n//   const [check, setCheck] = useState(false)\n//   const editorRef = useRef()\n//   const [editorLoaded, setEditorLoaded] = useState(false)\n//   const [value, setValue] = useState('')\n//   const onChange = (editorState) => {\n//     setEditorState(editorState)\n//   }\n//   const { Editor } = editorRef.current || {}\n//   const [Editor1, setEditor1] = useState('')\n//   useEffect(() => {\n//     if (typeof window !== 'undefined') {\n//       this.ReactQuill = require('react-quill')\n//     }\n//     if (document) {\n//       setEditor1(require('react-draft-wysiwyg'))\n//       if (process.browser) {\n//         setEditorLoaded(true)\n//       }\n//     }\n//     editorRef.current = {\n//       Editor: require('react-draft-wysiwyg'),\n//     }\n//   }, [])\n//   const ReactQuill = this.ReactQuill\n//   if (typeof window !== 'undefined' && ReactQuill) {\n//     return <ReactQuill onChange={setValue} theme='bubble' value={value} />\n//   } else {\n//     return <textarea />\n//   }\n//   return (\n//     <div>\n//       {editorLoaded ? (\n//         <Editor1\n//           editorState={editorState}\n//           toolbarClassName='toolbarClassName'\n//           wrapperClassName='wrapperClassName'\n//           editorClassName='editorClassName'\n//           onEditorStateChange={onChange}\n//         />\n//       ) : null}\n//       {/* <ReactQuill theme='snow' value={value} onChange={setValue} /> */}\n//     </div>\n//   )\n// }\n// export default EditorTxt","map":null,"metadata":{},"sourceType":"module"}