{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { useState, useEffect, useRef, Component } from 'react'; // import { Editor } from 'react-draft-wysiwyg'\n\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport dynamic from 'next/dynamic';\nimport { EditorState } from 'draft-js';\nvar WysiwygNoSSRWrapper = dynamic(function () {\n  return import('react-draft-wysiwyg').then(function (mod) {\n    return mod.Editor;\n  });\n}, {\n  loading: function loading() {\n    return null;\n  },\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('react-draft-wysiwyg')];\n    },\n    modules: ['react-draft-wysiwyg']\n  }\n});\n\nvar WysiwygEditor = /*#__PURE__*/function (_Component) {\n  _inherits(WysiwygEditor, _Component);\n\n  var _super = _createSuper(WysiwygEditor);\n\n  function WysiwygEditor(props) {\n    var _this;\n\n    _classCallCheck(this, WysiwygEditor);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"setEditor\", function (editor) {\n      _this.editor = editor;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onEditorStateChange\", function (editorState) {\n      _this.setState({\n        editorState: editorState\n      });\n    });\n\n    _this.state = {\n      editorState: EditorState.createEmpty()\n    };\n    return _this;\n  }\n\n  _createClass(WysiwygEditor, [{\n    key: \"render\",\n    value: function render() {\n      var editorState = this.state.editorState;\n      return __jsx(WysiwygNoSSRWrapper, {\n        ref: this.setEditor,\n        editorState: editorState,\n        wrapperClassName: \"demo-wrapper\",\n        editorClassName: \"demo-editor\",\n        onEditorStateChange: this.onEditorStateChange\n      });\n    }\n  }]);\n\n  return WysiwygEditor;\n}(Component);\n\nexport default WysiwygEditor; // function EditorTxt(props) {\n//   const [editorState, setEditorState] = useState('')\n//   const [check, setCheck] = useState(false)\n//   const editorRef = useRef()\n//   const [editorLoaded, setEditorLoaded] = useState(false)\n//   const [value, setValue] = useState('')\n//   const onChange = (editorState) => {\n//     setEditorState(editorState)\n//   }\n//   const { Editor } = editorRef.current || {}\n//   const [Editor1, setEditor1] = useState('')\n//   useEffect(() => {\n//     if (typeof window !== 'undefined') {\n//       this.ReactQuill = require('react-quill')\n//     }\n//     if (document) {\n//       setEditor1(require('react-draft-wysiwyg'))\n//       if (process.browser) {\n//         setEditorLoaded(true)\n//       }\n//     }\n//     editorRef.current = {\n//       Editor: require('react-draft-wysiwyg'),\n//     }\n//   }, [])\n//   const ReactQuill = this.ReactQuill\n//   if (typeof window !== 'undefined' && ReactQuill) {\n//     return <ReactQuill onChange={setValue} theme='bubble' value={value} />\n//   } else {\n//     return <textarea />\n//   }\n//   return (\n//     <div>\n//       {editorLoaded ? (\n//         <Editor1\n//           editorState={editorState}\n//           toolbarClassName='toolbarClassName'\n//           wrapperClassName='wrapperClassName'\n//           editorClassName='editorClassName'\n//           onEditorStateChange={onChange}\n//         />\n//       ) : null}\n//       {/* <ReactQuill theme='snow' value={value} onChange={setValue} /> */}\n//     </div>\n//   )\n// }\n// export default EditorTxt","map":null,"metadata":{},"sourceType":"module"}